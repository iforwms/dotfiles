### Config Options ###

# Enable mouse mode
set -g mouse on

# Set the default terminal type to xterm because not all applications
# appear to get along with 256-color modes.  We can run tmux in 256
# color mode and turn it on selectively for apps that support it.
# set -g default-terminal "screen-256color"
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"
# set -as terminal-overrides ',xterm*:sitm=\E[3m'

# Increase history
set -g history-limit 100000

# Reduce key timeout (switching from insert to normal mode in vim)
set -s escape-time 0

# Set base index of panes and windows to 1
set -g base-index 1
setw -g pane-base-index 1

# Enable vi keybindings in copy mode
setw -g mode-keys vi

# Force tmux to use system clipboard.
# Setup 'v' to begin selection as in Vim.
# Default for begin-selection
# Default for copy-selection
if-shell 'test -z "$SSH_CLIENT"' \
    "unbind -T copy-mode-vi Space; \
    unbind -T copy-mode-vi Enter; \
    bind -T copy-mode-vi v send-keys -X begin-selection; \
    bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'"

# Fix vim cursor issue when changing modes.
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'


### Key Bindings ###

# Set global shortcut to Ctrl+Space and Ctrl+b for remote sessions
unbind C-b
set -g prefix C-Space

if-shell 'test -n "$SSH_CLIENT"' \
  "set -g prefix C-b"

# Reloading config
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# Splitting panes
unbind v
unbind h

unbind % # Split vertically
unbind '"' # Split horizontally

bind v split-window -h -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"

# Reordering windows
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# Opening new windows to remote hosts.
unbind p
bind p command-prompt -p "SSH to host:" "if-shell '[ -n \"%%\" ]' 'new-window -n \"%1\" \"/usr/bin/ssh %1\"'"

# Navigating between panes
# bind -n C-h select-pane -L
# bind -n C-j select-pane -D
# bind -n C-k select-pane -U
# bind -n C-l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l

# Window management
unbind n  # DEFAULT KEY: Move to next window
unbind w  # DEFAULT KEY: change current window interactively

bind n command-prompt "rename-window '%%'"
bind w new-window -c "#{pane_current_path}"

bind -n M-j previous-window
bind -n M-k next-window


### Color Scheme

# Statusbar
set -g status-position bottom
set -g status-style fg=colour136,bg=#2d323b
set -g status-left ''
set -g status-right '#{?client_prefix,#[fg=colour39]Awaiting keypress...,#[fg=colour249]#{cmus_status} #[fg=colour240]#H }'
set -g status-justify left
set -g status-interval 2
set -g status-right-length 80
set -g status-left-length 20

# Messaging
set -g message-command-style fg=blue,bg=black
set -g message-style fg=white,bg=colour39,bold

# Window mode
setw -g mode-style bg=green,fg=black

# Window status
setw -g window-status-format ' #I#[fg=colour251]:#[fg=colour251]#W#F '
setw -g window-status-bell-style fg=colour235,bg=colour160 #base02, red
setw -g window-status-current-format "#[fg=colour39]#[bg=colour235] #I:#W#{?window_zoomed_flag,[Z],} "
setw -g window-status-current-style fg=colour166,bg=default #orange and default
setw -g window-status-style fg=colour244,bg=default #base0 and default

# Remote shell config
if-shell 'test -n "$SSH_CLIENT"' \
    "set -g status-style fg=colour136,bg=colour32"

if-shell 'test -n "$SSH_CLIENT"' \
    "setw -g window-status-format ' #[fg=colour251]#I#[fg=colour7]:#[fg=colour7]#W#F '"

if-shell 'test -n "$SSH_CLIENT"' \
   "setw -g window-status-current-format '#[fg=colour7]#[bg=colour161] #I:#W#{?window_zoomed_flag,[Z],} '"

if-shell 'test -n "$SSH_CLIENT"' \
    "set -g status-right '#{?client_prefix,#[fg=colour161]Awaiting keypress...,#[fg=colour255]#H }'"

# Loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

# The modes
# setw -g clock-mode-colour red
setw -g mode-style fg=red,bg=white,bold
setw -g clock-mode-colour colour64 #green

# The panes
set -g pane-border-style fg=colour235 #base02
set -g pane-active-border-style fg=magenta #base01
set -g display-panes-active-colour colour39 #blue
set -g display-panes-colour colour166 #orange

# Tmux cmus plugin
# if-shell "uname | grep -q Darwin" \
#     run-shell ~/.dotfiles/tmux/tmux-cmus/tmux-cmus.tmux
