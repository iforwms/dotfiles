#!/bin/bash

set -o errexit  # Exit the script if any command fails (add "|| true" to allow failing)
set -o nounset  # Exit the script if an undeclared variable is used
set -o pipefail # Exit the script if an error occurs in a pipe
# set -o xtrace # Enable bash debug output
# set -o verbose # Enable verbose output

source "${HOME}/.dotfiles/scripts/logger.sh"

readonly username="${1}"
readonly group="${2:-}"

if [[ -z "${username}" ]]; then
    log_e "Please enter a username and optional group."
    log "usage: ./create_ssh_user.sh USER [GROUP]"
    exit 1
fi

echo
echo -n "Enter a password for ${username}: "
read -rs pass
echo
echo
read -rs -p "Confirm password: " PASS_CONFIRM
echo
if [ "${pass}" != "${PASS_CONFIRM}" ]; then
    log_e "Passwords do not match."
    exit 1
fi

log "Passwords match - checking if user already exists."
if id "${username}" &>/dev/null; then
    log_w "User ${username} already exists, exiting."
    exit 1
fi

log "User does not exist, creating account."
add_user=$(sudo adduser --disabled-password --gecos "" "${username}")

if [[ $add_user ]]; then
    log_e "Failed to create user."
    exit 1
fi

log "Setting user password."
sudo usermod -p "$(echo "${pass}"|mkpasswd -m sha-512 -s)" "{$username}"

log "User account for ${username} created successfully!"

if [[ -n "${group}" ]]; then
    log "Found a group, adding ${username} to ${group} group."
    sudo usermod -a -G "${group}" "${username}"
fi

log "Generating SSH keys for ${username}"
sudo mkdir -p "/home/${username}/.ssh"
ssh_key=$(sudo ssh-keygen -q -N '' -t rsa -b 4096 -C '' -f "/home/${username}/.ssh/id_rsa")

if [[ $ssh_key ]]; then
    log_e "Failed to create SSH keys."
    exit 1
fi

log "SSH keys generated successfully."

log "Touching /home/${username}/.ssh/authorized_keys"
sudo touch "/home/${username}/.ssh/authorized_keys"

log "Copying public key to /home/${username}/.ssh/authorized_keys"
cat "/home/${username}/.ssh/id_rsa.pub" | sudo tee -a "/home/${username}/.ssh/authorized_keys" >/dev/null

log "Fixing permissions."
sudo chmod 600 "/home/${username}/.ssh/authorized_keys"
sudo chown -R "${username}:${username}" "/home/${username}/"

log "Account and SSH keys generated successfully."

credentials=/tmp/credentials
zip=$HOME/$(uname -n)_login_for_${username}.tar.gz

urls=$(
    grep -hRi server_name /etc/nginx/sites-enabled 2>/dev/null \
        | sed -E 's/[[:space:]]+server_name //;s/;//;s/^\.//' \
        | sort -u \
        | tr '\n' ' '
    )
urls=$urls+$(
    grep -hRi ServerName /etc/apache2/sites-available 2>/dev/null \
        | sed -E 's/[[:space:]]+ServerName //;s/;//;s/^\.//' \
        | sort -u \
        | tr '\n' ' '
    )

if [[ $urls ]]; then
    log "Finding IP addresses for the following URLs:\n\n      - $(echo "$urls" | sed 's/ /\n      - /g')"
    log "Found the following server IP addresses:"
    dig +short "$urls" | sort | uniq -c | sort -nr | awk '{print "      ",${GROUP}}'
fi

echo
read -rp "Please enter server IP address: " IP

exit

echo "SSH login: ${username}@$IP" >> $credentials
echo "Account password: $pass" >> $credentials

creds=$(sudo tar -czf "$zip" -C "/home/${username}/.ssh" id_rsa id_rsa.pub -C /tmp credentials)

if [[ "$creds" ]]; then
    log_e "Failed to generate SSH key tar file."
    exit 1
fi

rm -f $credentials

log "SSH keys can be found here: $zip"

exit 0
