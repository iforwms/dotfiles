#!/bin/bash

name=RESET_MYSQL_PASSWORD
if ! [ "$(id -u)" = 0 ]; then
  echo "[${name}] This script needs to be run as root or sudo." >&2
  exit 1
fi

while true; do
  read -r -s -p "[${name}] New root password: " password
  echo
  read -r -s -p "[${name}] New root password confirmation: " password_confirmation
  echo

  if [ "$password" != "$password_confirmation" ]; then
    echo "[${name}] Passwords do not match, please try again." && continue
  fi

  if [ -z "$password" ]; then
    echo "[${name}] [Warning] Setting empty password."
  fi

  break
done

echo "[${name}] New root password: ${password}"

echo "[${name}] Stopping current MySQL service..."
service mysql stop

echo "[${name}] Creating temporary folder for socket..."
mkdir -p /var/run/mysqld
chown mysql:mysql /var/run/mysqld

echo "[${name}] Starting MySQL safe daemon..."
mysqld_safe --skip-grant-tables --skip-networking &

jobs

echo "[${name}] Updating root password..."
mysql_version="$(mysqld -V | awk '{print substr($3,0,1) substr($3,3,1)}')"
if [[ "$mysql_version" -lt 80 ]]; then
  mysql_statement="USE mysql; UPDATE user SET authentication_string='${password}' WHERE User='root'; UPDATE user SET plugin='mysql_native_password' WHERE User='root'; FLUSH PRIVILEGES; quit"
else
  mysql_statement="USE mysql; UPDATE user SET authentication_string=null WHERE User='root'; FLUSH PRIVILEGES; ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '${password}'; FLUSH PRIVILEGES; quit"
fi

mysql -u root -e "${mysql_statement}"

echo "[${name}] Killing daemon process..."
pkill mysqld

echo "[${name}] Starting MySQL service..."
service mysql start

echo "[${name}] All done!"
exit 0
