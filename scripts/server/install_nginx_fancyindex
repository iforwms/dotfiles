#!/usr/bin/env bash

name=NGINX_FANCYINDEX
if [[ $(/usr/bin/id -u) -ne 0 ]]; then
    echo "[${name}] This script must be run as root (or sudo). Exiting."
    exit 1
fi

nginx_conf=/etc/nginx/nginx.conf
download_dir="/home/${SUDO_USER}/downloads/nginx"
geoip_version="3.3"
nginx_version=$(nginx -v 2>&1 | awk -F' ' '{print $3}' | cut -d/ -f 2)
nginx_build_args=$(nginx -V 2>&1 | grep configure | cut -d: -f2)

mkdir -p "${download_dir}"

echo "[${name}] Fetching nginx source."
wget "https://nginx.org/download/nginx-${nginx_version}.tar.gz" -O "${download_dir}/nginx-${nginx_version}.tar.gz"
tar xvfz "${download_dir}/nginx-${nginx_version}.tar.gz" -C "${download_dir}"

echo "[${name}] Fetching fancyindex module."
git clone https://github.com/aperezdc/ngx-fancyindex.git "${download_dir}/ngx-fancyindex"

echo "[${name}] Fetching geoip module."
wget https://github.com/leev/ngx_http_geoip2_module/archive/refs/tags/${geoip_version}.tar.gz -O "${download_dir}/${geoip_version}.tar.gz"
tar xvfz "${download_dir}/${geoip_version}.tar.gz" -C "${download_dir}"

cd "${download_dir}/nginx-${nginx_version}"
echo "./configure ${nginx_build_args} --add-dynamic-module=../ngx-fancyindex --add-dynamic-module=../ngx_http_geoip2_module-${geoip_version} --with-stream"
# ./configure ${nginx_build_args} --add-dynamic-module=../ngx-fancyindex --add-dynamic-module=../ngx_http_geoip2_module-${geoip_version} --with-stream
echo "./configure ${nginx_build_args} --add-dynamic-module=../ngx-fancyindex --add-dynamic-module=../ngx_http_geoip2_module-${geoip_version} --with-stream" > "${download_dir}/tempconfigure.sh"
chmod 755 "${download_dir}/tempconfigure.sh"
${download_dir}/tempconfigure.sh
rm "${download_dir}/tempconfigure.sh"

make modules

cp -vi ./objs/ngx_http_fancyindex_module.so ./objs/ngx_http_geoip2_module.so ./objs/ngx_stream_geoip2_module.so /usr/share/nginx/modules
sed -i '\:include /etc/nginx/modules-enabled:a load_module /usr/share/nginx/modules/ngx_http_fancyindex_module.so;' $nginx_conf

echo "[${name}] Checking configuration."
nginx -t

read -p "[${name}] Do you want to restart the service? (y/n) " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
   service nginx restart
fi

git clone --depth 1 git@github.com:Naereen/Nginx-Fancyindex-Theme "${download_dir}/Nginx-Fancyindex-Theme"

cat <<EOF
# Examply fancy index configuration

    fancyindex on;
    fancyindex_localtime on;
    fancyindex_exact_size off;
    # Specify the path to the header.html and foother.html files, that are server-wise,
    # ie served from root of the website. Remove the leading '/' otherwise.
    fancyindex_header "/Nginx-Fancyindex-Theme-light/header.html";
    fancyindex_footer "/Nginx-Fancyindex-Theme-light/footer.html";
    # Ignored files will not show up in the directory listing, but will still be public.
    fancyindex_ignore "examplefile.html";
    # Making sure folder where these files are do not show up in the listing.
    fancyindex_ignore "Nginx-Fancyindex-Theme-light";
EOF

echo "[${name}] All done!"
exit 0
