#!/usr/bin/env bash

IMG_DIR="$1"
AUDIO_FILE="$2"
DURATION_PER_IMAGE="${3:-3}"
TRANSITION_DURATION="${4:-1}"

WORKDIR=$(mktemp -d)
trap 'rm -rf "$WORKDIR"' EXIT

# Resize images
i=1
for img in "$IMG_DIR"/*.{jpg,jpeg,png,JPG,PNG}; do
  ffmpeg -y -i "$img" -vf "scale=1920:1080:force_original_aspect_ratio=decrease,pad=1920:1080:(ow-iw)/2:(oh-ih)/2" \
    "$WORKDIR/$(printf "%04d.jpg" "$i").png" >/dev/null 2>&1
  ((i++))
done

# Build inputs for slideshow
IMG_LIST="$WORKDIR/images.txt"
rm -f "$IMG_LIST"
for img in "$WORKDIR"/*.png; do
  echo "file '$img'" >> "$IMG_LIST"
  echo "duration $DURATION_PER_IMAGE" >> "$IMG_LIST"
done
# repeat last image to make total duration correct
LAST_IMG=$(ls "$WORKDIR"/*.png | tail -n1)
echo "file '$LAST_IMG'" >> "$IMG_LIST"

# Generate base slideshow (no transitions yet)
ffmpeg -y -f concat -safe 0 -i "$IMG_LIST" -vsync vfr -pix_fmt yuv420p "$WORKDIR/base.mp4"

# Trim/pad audio to match
TOTAL_DURATION=$(echo "$DURATION_PER_IMAGE * $(ls "$WORKDIR"/*.png | wc -l)" | bc)
TRIMMED_AUDIO="$WORKDIR/audio_trimmed.mp3"
ffmpeg -y -i "$AUDIO_FILE" -t "$TOTAL_DURATION" -af "apad=pad_dur=2" -acodec mp3 "$TRIMMED_AUDIO"

# Combine slideshow + audio
ffmpeg -y -i "$WORKDIR/base.mp4" -i "$TRIMMED_AUDIO" -c:v libx264 -c:a aac -shortest output.mp4
