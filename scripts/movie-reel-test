#!/usr/bin/env bash

image="$1"
if [ -z "$image" ]; then
  echo "Usage: $0 <image_file>"
  exit 1
fi

# Get image resolution
IFS=',' read -r width height < <(ffprobe -v error -select_streams v:0 \
    -show_entries stream=width,height -of csv=p=0:s=, "$image")

# Ensure width and height are even
width=$((width - width % 2))
height=$((height - height % 2))

# Video parameters
DURATION=3
FPS=25
FRAMES=$((DURATION*FPS))

# Randomized zoom and pan amounts
ZOOM_AMOUNT=$(awk 'BEGIN{srand(); print 0.2+rand()*0.1}')  # zoom factor
PAN_X=$(awk -v max="$width/4" 'BEGIN{srand(); print int(rand()*max)}')
PAN_Y=$(awk -v max="$height/4" 'BEGIN{srand(); print int(rand()*max)}')

# Expressions for smooth ease-in/ease-out
# on = frame number, divide by total frames for 0->1->0
zoom_expr="1 + $ZOOM_AMOUNT * sin(3.14159265*on/$FRAMES)"
x_expr="$PAN_X * sin(3.14159265*on/$FRAMES)"
y_expr="$PAN_Y * sin(3.14159265*on/$FRAMES)"

# Generate video
ffmpeg -y -loop 1 -i "$image" -t $DURATION -vf "
scale=$width:$height,
zoompan=z='$zoom_expr':x='$x_expr':y='$y_expr':s=${width}x${height}:d=$FRAMES
" -c:v libx264 -pix_fmt yuv420p -r $FPS output.mp4

open "output.mp4"
echo "Cinematic ease-in/ease-out zoom video generated successfully."
